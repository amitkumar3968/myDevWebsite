{"version":3,"file":"static/webpack/static/development/pages/index.js.3ae322926916b75a9db8.hot-update.js","sources":["webpack:///./comps/WorkExperience.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Pane, Button, Text, Heading, Label, Li } from 'evergreen-ui'\nimport { ListItem } from 'evergreen-ui/commonjs/typography';\nvar moment = require('moment');\n// import { List } from 'semantic-ui-react'\nimport ReactGA from 'react-ga';\n\nclass WorkExperience extends Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n\n        ReactGA.pageview('/Skills');\n\n    }\n\n    gettimeDuration(startingdate) {\n\n        // assuming startingdate is of format -- dd/MM/YYYY\n        // alert(startingdate);\n        // console.log(typeof (startingdate));\n        var parts = startingdate.split('/');\n        // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\n        // January - 0, February - 1, etc.\n        var mydate = new Date(parts[2], parts[1] - 1, parts[0]);\n        // console.log(mydate.getTime());\n        var currentDate = new Date();\n        // console.log(currentDate.getTime());\n\n        // console.log(moment.duration(currentDate - mydate).years()); // This should returns 5\n        // console.log(moment.duration(currentDate - mydate).months());\n\n        var totalExp = moment.duration(currentDate - mydate).years().toString() + '.' +\n            moment.duration(currentDate - mydate).months().toString() + ' Yrs';\n\n\n        return totalExp;\n    }\n\n    render() {\n        return (\n            <Pane width='100vw' height='100vh' paddingTop={100}\n            >\n                <Pane flex={1} alignItems='center' display=\"flex\">\n                    <Label color='#789ff3'>Total Work Experience - {this.gettimeDuration(this.props.data.WorkExperience.firstJobStartingdate)} </Label>\n                </Pane>\n                <Pane>\n                    <Text>Summary ->  iOS - 6+ yrs , ReactNative - 1+ yrs, ReactJS - 1+ yrs </Text>\n                </Pane>\n                {/* // Company listings. */}\n\n                <Pane display=\"flex\" justifyContent='flex-end' alignItems='flex-end' >\n\n\n                    <Pane margin={10} alighself='center'>\n                        <Label> ðŸ’¼ Current Company</Label>\n\n                        <Pane>\n                            <Text>\n                                <u> {this.props.data.WorkExperience.currentCompanydetails.companyname}</u>\n                            </Text>\n                        </Pane>\n\n                        <Pane>\n                            <ListItem>Position- {this.props.data.WorkExperience.currentCompanydetails.Position}</ListItem>\n\n                            <ListItem>Time Served - {this.props.data.WorkExperience.currentCompanydetails.JoiningYear}</ListItem>\n\n                            <ListItem>Responsibilites-</ListItem>\n                        </Pane>\n\n                        <Pane marginLeft={20}>\n                            {Array.isArray(this.props.data.WorkExperience.currentCompanydetails.rolesandResponsibilty) &&\n                                this.props.data.WorkExperience.currentCompanydetails.rolesandResponsibilty.map((value, index) => {\n                                    return (\n                                        <ListItem key={index}>{value}</ListItem>\n                                    )\n                                })\n                            }\n                        </Pane>\n                    </Pane>\n\n                    {/* */}\n\n                    <Pane margin={10}  >\n                        <Label> ðŸ’¼ Last Company </Label>\n                        <Pane>\n                            <Text>\n                                <u>{this.props.data.WorkExperience.secondCompanydetails.companyname} </u>\n                            </Text>\n                        </Pane>\n\n                        <Pane>\n                            <ListItem>Position- {this.props.data.WorkExperience.secondCompanydetails.Position}</ListItem>\n\n                            <ListItem>Time Served- {this.props.data.WorkExperience.secondCompanydetails.JoiningYear}</ListItem>\n\n                            <ListItem>Responsibilites-</ListItem>\n                        </Pane>\n\n                        <Pane marginLeft={20}>\n                            {Array.isArray(this.props.data.WorkExperience.secondCompanydetails.rolesandResponsibilty) &&\n                                this.props.data.WorkExperience.secondCompanydetails.rolesandResponsibilty.map((value, index) => {\n                                    return (\n                                        <ListItem key={index}>{value}</ListItem>\n                                    )\n                                })\n                            }\n                        </Pane>\n                    </Pane>\n\n                    {/* */}\n                    <Pane margin={10}  >\n                        <Label> ðŸ’¼ First Company</Label>\n                        <Pane>\n                            <Text>\n                                <u>  {this.props.data.WorkExperience.firstCompanydetails.companyname} </u>\n                            </Text>\n                        </Pane>\n                        <Pane>\n                            <ListItem>Position- {this.props.data.WorkExperience.firstCompanydetails.Position}</ListItem>\n\n                            <ListItem>Time Served- {this.props.data.WorkExperience.firstCompanydetails.JoiningYear}</ListItem>\n\n                            <ListItem>Responsibilites-</ListItem>\n                        </Pane>\n\n                        <Pane marginLeft={20}>\n                            {Array.isArray(this.props.data.WorkExperience.firstCompanydetails.rolesandResponsibilty) &&\n                                this.props.data.WorkExperience.firstCompanydetails.rolesandResponsibilty.map((value, index) => {\n                                    return (\n                                        <ListItem key={index}>{value}</ListItem>\n                                    )\n                                })\n                            }\n                        </Pane>\n                    </Pane>\n\n\n                </Pane>\n            </Pane>\n\n        )\n    }\n}\n\nexport default WorkExperience;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AAEA;AAEA;;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAUA;;;;AAzIA;AACA;AA2IA;;;;A","sourceRoot":""}